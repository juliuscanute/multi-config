apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'


ext {
    if (project.rootProject.file('secret.properties').exists()) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('secret.properties').newDataInputStream())
        userName = properties.getProperty("bintray.user")
        apiKey = properties.getProperty("bintray.apikey")
        filePresent = true
    } else {
        filePresent = false
    }
}


def pomConfig = {
    licenses {
        license {
            name licenseName
            url licenseUrl
            distribution siteUrl
        }
    }
    developers {
        developer {
            id developerId
            name developerName
            email developerEmail
        }
    }

    scm {
        url gitUrl
    }
}

publishing {
    publications {
        MultiConfigPublication(MavenPublication) {
            // Define this explicitly if using implementation or api configurations
            pom.withXml {
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}


// Bintray
bintray {
    if (filePresent) {
        user = userName
        key = apiKey
    } else {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
    }
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
    publications = ['MultiConfigPublication']
}